// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warfighters.Models.Data;

#nullable disable

namespace Warfighters.Migrations
{
    [DbContext(typeof(HoyoverseContext))]
    partial class HoyoverseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ArtifactStat", b =>
                {
                    b.Property<int>("IdArtifact")
                        .HasColumnType("int")
                        .HasColumnName("id_artifact");

                    b.Property<int>("IdStat")
                        .HasColumnType("int")
                        .HasColumnName("id_stat");

                    b.HasKey("IdArtifact", "IdStat")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdStat" }, "fk_as_s");

                    b.ToTable("artifact_stats", (string)null);
                });

            modelBuilder.Entity("CharactersSet", b =>
                {
                    b.Property<int>("IdCharacter")
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    b.Property<int>("IdSet")
                        .HasColumnType("int")
                        .HasColumnName("id_set");

                    b.HasKey("IdCharacter", "IdSet")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdSet" }, "fk_cs_s");

                    b.ToTable("characters_set", (string)null);
                });

            modelBuilder.Entity("CharactersWeapon", b =>
                {
                    b.Property<int>("IdCharacter")
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    b.Property<int>("IdWeapon")
                        .HasColumnType("int")
                        .HasColumnName("id_weapon");

                    b.HasKey("IdCharacter", "IdWeapon")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdWeapon" }, "fk_cw_w");

                    b.ToTable("characters_weapon", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Artifact", b =>
                {
                    b.Property<int>("IdArtifact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_artifact");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdArtifact"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.HasKey("IdArtifact")
                        .HasName("PRIMARY");

                    b.ToTable("artifact", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Character", b =>
                {
                    b.Property<int>("IdCharacter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCharacter"));

                    b.Property<int>("CountViews")
                        .HasColumnType("int")
                        .HasColumnName("count_views");

                    b.Property<string>("EyeGod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("eye_god");

                    b.Property<int>("IdSignatureSetArtifact")
                        .HasColumnType("int")
                        .HasColumnName("id_signature_set_artifact");

                    b.Property<int>("IdSignatureWepons")
                        .HasColumnType("int")
                        .HasColumnName("id_signature_wepons");

                    b.Property<string>("ImageCharacter")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_character");

                    b.Property<string>("MainDps")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("main_dps");

                    b.Property<string>("NameCharacter")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("name_character");

                    b.Property<int>("Rariry")
                        .HasColumnType("int")
                        .HasColumnName("rariry");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("region");

                    b.Property<string>("SubDps")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("sub_dps");

                    b.Property<string>("Support")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("support");

                    b.Property<string>("TypeWeapon")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("type_weapon");

                    b.HasKey("IdCharacter")
                        .HasName("PRIMARY");

                    b.HasIndex("IdSignatureSetArtifact");

                    b.HasIndex(new[] { "IdSignatureWepons" }, "fk_c_w");

                    b.HasIndex(new[] { "IdCharacter" }, "id_character_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "ImageCharacter" }, "image_character_UNIQUE")
                        .IsUnique()
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 255 });

                    b.HasIndex(new[] { "NameCharacter" }, "name_character_UNIQUE")
                        .IsUnique();

                    b.ToTable("characters", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Constellation", b =>
                {
                    b.Property<int>("IdConstellation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_constellation");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdConstellation"));

                    b.Property<int>("ConstellationLevel")
                        .HasColumnType("int")
                        .HasColumnName("constellation_level");

                    b.Property<string>("DescriptionConstellation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description_constellation");

                    b.Property<int>("IdCharacter")
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    b.Property<string>("NameConstellation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name_constellation");

                    b.HasKey("IdConstellation")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DescriptionConstellation" }, "description_constellation_UNIQUE")
                        .IsUnique()
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 255 });

                    b.HasIndex(new[] { "IdCharacter" }, "fk_c_c");

                    b.HasIndex(new[] { "NameConstellation" }, "name_constellation_UNIQUE")
                        .IsUnique();

                    b.ToTable("constellation", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.RecommendedStat", b =>
                {
                    b.Property<int>("IdCharacter")
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    b.Property<int>("IdArtifact")
                        .HasColumnType("int")
                        .HasColumnName("id_artifact");

                    b.Property<int>("IdStat")
                        .HasColumnType("int")
                        .HasColumnName("id_stat");

                    b.HasKey("IdCharacter", "IdArtifact", "IdStat")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "IdArtifact" }, "fk_rs_a");

                    b.HasIndex(new[] { "IdStat" }, "fk_rs_s");

                    b.ToTable("recommended_stats", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.SetArtifact", b =>
                {
                    b.Property<int>("IdSet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_set");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSet"));

                    b.Property<string>("Dungeon")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("dungeon");

                    b.Property<string>("FullStatBonus")
                        .HasColumnType("text")
                        .HasColumnName("full_stat_bonus");

                    b.Property<string>("ImageSet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_set");

                    b.Property<string>("IncompleteStatBonus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("incomplete_stat_bonus");

                    b.Property<string>("NameSet")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("name_set");

                    b.HasKey("IdSet")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FullStatBonus" }, "full_stat_bonus_UNIQUE")
                        .IsUnique()
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 255 });

                    b.HasIndex(new[] { "ImageSet" }, "image_set_UNIQUE")
                        .IsUnique()
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 255 });

                    b.HasIndex(new[] { "NameSet" }, "name_set_UNIQUE")
                        .IsUnique();

                    b.ToTable("set_artifact", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Stat", b =>
                {
                    b.Property<int>("IdStat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_stat");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdStat"));

                    b.Property<decimal>("MaxNumber")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("max_number");

                    b.Property<string>("NameStat")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name_stat");

                    b.Property<decimal>("StartNumber")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("start_number");

                    b.Property<string>("TypeStat")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char(3)")
                        .HasColumnName("type_stat")
                        .IsFixedLength();

                    b.HasKey("IdStat")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdStat" }, "id_stat_UNIQUE")
                        .IsUnique();

                    b.ToTable("stats", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Talent", b =>
                {
                    b.Property<int>("IdTalent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_talent");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTalent"));

                    b.Property<string>("CategoryTalent")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("category_talent");

                    b.Property<string>("DescriptionTalent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description_talent");

                    b.Property<int>("IdCharacter")
                        .HasColumnType("int")
                        .HasColumnName("id_character");

                    b.Property<string>("NameTalent")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name_talent");

                    b.Property<int>("PriorityImprovement")
                        .HasColumnType("int")
                        .HasColumnName("priority_improvement");

                    b.HasKey("IdTalent")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCharacter" }, "fk_t_c");

                    b.HasIndex(new[] { "NameTalent" }, "name_talent_UNIQUE")
                        .IsUnique();

                    b.ToTable("talent", (string)null);
                });

            modelBuilder.Entity("Warfighters.Models.Weapon", b =>
                {
                    b.Property<int>("IdWeapon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_weapon");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdWeapon"));

                    b.Property<string>("AdditionalStat")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("additional_stat");

                    b.Property<int>("BasicAttack")
                        .HasColumnType("int")
                        .HasColumnName("basic_attack");

                    b.Property<string>("ImageWeapon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_weapon");

                    b.Property<string>("NameWeapon")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name_weapon");

                    b.Property<string>("PassiveEffect")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("passive_effect");

                    b.Property<int>("RarityWeapon")
                        .HasColumnType("int")
                        .HasColumnName("rarity_weapon");

                    b.Property<string>("TypeWeapon")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("type_weapon");

                    b.HasKey("IdWeapon")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdWeapon" }, "id_weapon_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "ImageWeapon" }, "image_weapon_UNIQUE")
                        .IsUnique()
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 255 });

                    b.HasIndex(new[] { "NameWeapon" }, "name_weapon_UNIQUE")
                        .IsUnique();

                    b.ToTable("weapon", (string)null);
                });

            modelBuilder.Entity("ArtifactStat", b =>
                {
                    b.HasOne("Warfighters.Models.Artifact", null)
                        .WithMany()
                        .HasForeignKey("IdArtifact")
                        .IsRequired()
                        .HasConstraintName("fk_as_a");

                    b.HasOne("Warfighters.Models.Stat", null)
                        .WithMany()
                        .HasForeignKey("IdStat")
                        .IsRequired()
                        .HasConstraintName("fk_as_s");
                });

            modelBuilder.Entity("CharactersSet", b =>
                {
                    b.HasOne("Warfighters.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("IdCharacter")
                        .IsRequired()
                        .HasConstraintName("fk_cs_c");

                    b.HasOne("Warfighters.Models.SetArtifact", null)
                        .WithMany()
                        .HasForeignKey("IdSet")
                        .IsRequired()
                        .HasConstraintName("fk_cs_s");
                });

            modelBuilder.Entity("CharactersWeapon", b =>
                {
                    b.HasOne("Warfighters.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("IdCharacter")
                        .IsRequired()
                        .HasConstraintName("fk_cw_c");

                    b.HasOne("Warfighters.Models.Weapon", null)
                        .WithMany()
                        .HasForeignKey("IdWeapon")
                        .IsRequired()
                        .HasConstraintName("fk_cw_w");
                });

            modelBuilder.Entity("Warfighters.Models.Character", b =>
                {
                    b.HasOne("Warfighters.Models.SetArtifact", "IdSignaturSetNavigation")
                        .WithMany("Characters")
                        .HasForeignKey("IdSignatureSetArtifact")
                        .IsRequired()
                        .HasConstraintName("fk_c_s");

                    b.HasOne("Warfighters.Models.Weapon", "IdSignatureWeponsNavigation")
                        .WithMany("Characters")
                        .HasForeignKey("IdSignatureWepons")
                        .IsRequired()
                        .HasConstraintName("fk_c_w");

                    b.Navigation("IdSignaturSetNavigation");

                    b.Navigation("IdSignatureWeponsNavigation");
                });

            modelBuilder.Entity("Warfighters.Models.Constellation", b =>
                {
                    b.HasOne("Warfighters.Models.Character", "IdCharacterNavigation")
                        .WithMany("Constellations")
                        .HasForeignKey("IdCharacter")
                        .IsRequired()
                        .HasConstraintName("fk_c_c");

                    b.Navigation("IdCharacterNavigation");
                });

            modelBuilder.Entity("Warfighters.Models.RecommendedStat", b =>
                {
                    b.HasOne("Warfighters.Models.Artifact", "IdArtifactNavigation")
                        .WithMany("RecommendedStats")
                        .HasForeignKey("IdArtifact")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warfighters.Models.Character", "IdCharacterNavigation")
                        .WithMany("RecommendedStats")
                        .HasForeignKey("IdCharacter")
                        .IsRequired()
                        .HasConstraintName("fk_rs_c");

                    b.HasOne("Warfighters.Models.Stat", "IdStatNavigation")
                        .WithMany("RecommendedStats")
                        .HasForeignKey("IdStat")
                        .IsRequired()
                        .HasConstraintName("fk_rs_s");

                    b.Navigation("IdArtifactNavigation");

                    b.Navigation("IdCharacterNavigation");

                    b.Navigation("IdStatNavigation");
                });

            modelBuilder.Entity("Warfighters.Models.Talent", b =>
                {
                    b.HasOne("Warfighters.Models.Character", "IdCharacterNavigation")
                        .WithMany("Talents")
                        .HasForeignKey("IdCharacter")
                        .IsRequired()
                        .HasConstraintName("fk_t_c");

                    b.Navigation("IdCharacterNavigation");
                });

            modelBuilder.Entity("Warfighters.Models.Artifact", b =>
                {
                    b.Navigation("RecommendedStats");
                });

            modelBuilder.Entity("Warfighters.Models.Character", b =>
                {
                    b.Navigation("Constellations");

                    b.Navigation("RecommendedStats");

                    b.Navigation("Talents");
                });

            modelBuilder.Entity("Warfighters.Models.SetArtifact", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Warfighters.Models.Stat", b =>
                {
                    b.Navigation("RecommendedStats");
                });

            modelBuilder.Entity("Warfighters.Models.Weapon", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
